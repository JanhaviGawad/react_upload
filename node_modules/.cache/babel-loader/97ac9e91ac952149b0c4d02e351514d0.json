{"ast":null,"code":"import _toConsumableArray from\"/home/vaibhav/Desktop/friens/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/vaibhav/Desktop/friens/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import styles from\"./FriendsList.module.css\";import{useState}from\"react\";import FriendCard from\"./FriendCard\";import AddFriends from\"./AddFriends\";import Pagination from\"./UI/Pagination\";import SearchBox from\"./UI/SearchBox\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var dummyData=[{name:\"Rahul Gupta\",id:1,fav:\"true\"},{name:\"Shivangi Sharma\",id:2,fav:\"false\"},{name:\"Rohit Sharma\",id:3,fav:\"false\"}];var count=dummyData.length+1;var FriendsList=function FriendsList(){var _useState=useState(dummyData),_useState2=_slicedToArray(_useState,2),friendsData=_useState2[0],setFriendsData=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),currentPage=_useState4[0],setCurrentPage=_useState4[1];var _useState5=useState(4),_useState6=_slicedToArray(_useState5,2),postsPerPage=_useState6[0],setPostsPerPage=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),searchText=_useState8[0],setSearchText=_useState8[1];var onAddNewFriend=function onAddNewFriend(enteredName){setFriendsData(function(prevList){var updatedList=_toConsumableArray(prevList);updatedList.push({name:enteredName,id:count++,fav:false});return updatedList;});};var deleteFriendHandler=function deleteFriendHandler(friendId){setFriendsData(function(prevGoals){var updatedList=prevGoals.filter(function(friends){return friends.id!==friendId;});return updatedList;});};function compare(a,b){if(a.fav<b.fav){return 1;}if(a.fav>b.fav){return-1;}return 0;}var favFriendHandler=function favFriendHandler(friendId){setFriendsData(function(prevFriends){var updatedList=prevFriends.map(function(friend){if(friend.id==friendId){if(friend.fav==\"true\")friend.fav=\"false\";else friend.fav=\"true\";}return friend;});updatedList.sort(compare);return updatedList;});};var searchTextValue=function searchTextValue(text){setSearchText(text.toLocaleLowerCase());};var indexOfLastPost=currentPage*postsPerPage;var indexOfFirstPost=indexOfLastPost-postsPerPage;var currentPosts=friendsData.slice(indexOfFirstPost,indexOfLastPost);var paginate=function paginate(pageNumber){return setCurrentPage(pageNumber);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AddFriends,{onAddNewFriend:onAddNewFriend}),/*#__PURE__*/_jsx(SearchBox,{onSearch:searchTextValue}),/*#__PURE__*/_jsx(\"section\",{className:styles.FriendDetails,children:currentPosts.filter(function(val){if(searchText==\"\")return val;else if(val.name.toLocaleLowerCase().includes(searchText))return val;}).map(function(item){return/*#__PURE__*/_jsx(FriendCard,{fav:item.fav,name:item.name,id:item.id,onDelete:deleteFriendHandler,onFav:favFriendHandler},item.id);})}),/*#__PURE__*/_jsx(Pagination,{postsPerPage:postsPerPage,totalPosts:friendsData.length,paginate:paginate})]});};export default FriendsList;","map":{"version":3,"sources":["/home/vaibhav/Desktop/friens/src/Components/FriendsList.js"],"names":["styles","useState","FriendCard","AddFriends","Pagination","SearchBox","dummyData","name","id","fav","count","length","FriendsList","friendsData","setFriendsData","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","searchText","setSearchText","onAddNewFriend","enteredName","prevList","updatedList","push","deleteFriendHandler","friendId","prevGoals","filter","friends","compare","a","b","favFriendHandler","prevFriends","map","friend","sort","searchTextValue","text","toLocaleLowerCase","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","FriendDetails","val","includes","item"],"mappings":"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","sourcesContent":["import styles from \"./FriendsList.module.css\";\r\nimport { useState } from \"react\";\r\nimport FriendCard from \"./FriendCard\";\r\nimport AddFriends from \"./AddFriends\";\r\nimport Pagination from \"./UI/Pagination\";\r\nimport SearchBox from \"./UI/SearchBox\";\r\nconst dummyData = [\r\n  { name: \"Rahul Gupta\", id: 1, fav: \"true\" },\r\n  { name: \"Shivangi Sharma\", id: 2, fav: \"false\" },\r\n  { name: \"Rohit Sharma\", id: 3, fav: \"false\" },\r\n];\r\nlet count = dummyData.length+1;\r\nconst FriendsList = () => {\r\n  const [friendsData, setFriendsData] = useState(dummyData);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(4);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const onAddNewFriend = (enteredName) => {\r\n    setFriendsData((prevList) => {\r\n      const updatedList = [...prevList];\r\n      updatedList.push({ name: enteredName, id: count++, fav: false });\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  const deleteFriendHandler = (friendId) => {\r\n    setFriendsData((prevGoals) => {\r\n      const updatedList = prevGoals.filter(\r\n        (friends) => friends.id !== friendId\r\n      );\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  function compare(a, b) {\r\n    if (a.fav < b.fav) {\r\n      return 1;\r\n    }\r\n    if (a.fav > b.fav) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const favFriendHandler = (friendId) => {\r\n    setFriendsData((prevFriends) => {\r\n      const updatedList = prevFriends.map((friend) => {\r\n        if (friend.id == friendId) {\r\n          if(friend.fav==\"true\")\r\n            friend.fav=\"false\";\r\n          else \r\n          friend.fav=\"true\";\r\n        }\r\n\r\n        return friend;\r\n      });\r\n      updatedList.sort(compare);\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  const searchTextValue = (text) => {\r\n    setSearchText(text.toLocaleLowerCase());\r\n  };\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = friendsData.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <AddFriends onAddNewFriend={onAddNewFriend}></AddFriends>\r\n      <SearchBox onSearch={searchTextValue}></SearchBox>\r\n      <section className={styles.FriendDetails}>\r\n        {currentPosts\r\n          .filter((val) => {\r\n            if (searchText == \"\") return val;\r\n            else if (val.name.toLocaleLowerCase().includes(searchText))\r\n              return val;\r\n          })\r\n          .map((item) => {\r\n            return (\r\n              <FriendCard\r\n                key={item.id}\r\n                fav={item.fav}\r\n                name={item.name}\r\n                id={item.id}\r\n                onDelete={deleteFriendHandler}\r\n                onFav={favFriendHandler}\r\n              ></FriendCard>\r\n            );\r\n          })}\r\n      </section>\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={friendsData.length}\r\n        paginate={paginate}\r\n      ></Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n"]},"metadata":{},"sourceType":"module"}