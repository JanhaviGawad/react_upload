{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Desktop/friens/src/Components/FriendsList.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./FriendsList.module.css\";\nimport { useState } from \"react\";\nimport FriendCard from \"./FriendCard\";\nimport AddFriends from \"./AddFriends\";\nimport Pagination from \"./UI/Pagination\";\nimport SearchBox from \"./UI/SearchBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst dummyData = [{\n  name: \"Rahul Gupta\",\n  id: 1,\n  fav: \"true\"\n}, {\n  name: \"Shivangi Sharma\",\n  id: 2,\n  fav: \"false\"\n}, {\n  name: \"Rohit Sharma\",\n  id: 3,\n  fav: \"false\"\n}];\nlet count = dummyData.length + 1;\n\nconst FriendsList = () => {\n  _s();\n\n  const [friendsData, setFriendsData] = useState(dummyData);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(4);\n  const [searchText, setSearchText] = useState(\"\");\n\n  const onAddNewFriend = enteredName => {\n    setFriendsData(prevList => {\n      const updatedList = [...prevList];\n      updatedList.push({\n        name: enteredName,\n        id: count++,\n        fav: false\n      });\n      return updatedList;\n    });\n  };\n\n  const deleteFriendHandler = friendId => {\n    setFriendsData(prevGoals => {\n      const updatedList = prevGoals.filter(friends => friends.id !== friendId);\n      return updatedList;\n    });\n  };\n\n  function compare(a, b) {\n    if (a.fav < b.fav) {\n      return 1;\n    }\n\n    if (a.fav > b.fav) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  const favFriendHandler = friendId => {\n    setFriendsData(prevFriends => {\n      const updatedList = prevFriends.map(friend => {\n        if (friend.id == friendId) {\n          if (friend.fav == \"true\") friend.fav = \"false\";else friend.fav = \"true\";\n        }\n\n        return friend;\n      });\n      updatedList.sort(compare);\n      return updatedList;\n    });\n  };\n\n  const searchTextValue = text => {\n    setSearchText(text.toLocaleLowerCase());\n  };\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = friendsData.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddFriends, {\n      onAddNewFriend: onAddNewFriend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      onSearch: searchTextValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.FriendDetails,\n      children: currentPosts.filter(val => {\n        if (searchText == \"\") return val;else if (val.name.toLocaleLowerCase().includes(searchText)) return val;\n      }).map(item => {\n        return /*#__PURE__*/_jsxDEV(FriendCard, {\n          fav: item.fav,\n          name: item.name,\n          id: item.id,\n          onDelete: deleteFriendHandler,\n          onFav: favFriendHandler\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      postsPerPage: postsPerPage,\n      totalPosts: friendsData.length,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FriendsList, \"lOsYK2AGK7n2RA66tL9HgUPYM2s=\");\n\n_c = FriendsList;\nexport default FriendsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"sources":["/home/vaibhav/Desktop/friens/src/Components/FriendsList.js"],"names":["styles","useState","FriendCard","AddFriends","Pagination","SearchBox","dummyData","name","id","fav","count","length","FriendsList","friendsData","setFriendsData","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","searchText","setSearchText","onAddNewFriend","enteredName","prevList","updatedList","push","deleteFriendHandler","friendId","prevGoals","filter","friends","compare","a","b","favFriendHandler","prevFriends","map","friend","sort","searchTextValue","text","toLocaleLowerCase","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","FriendDetails","val","includes","item"],"mappings":"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","sourcesContent":["import styles from \"./FriendsList.module.css\";\r\nimport { useState } from \"react\";\r\nimport FriendCard from \"./FriendCard\";\r\nimport AddFriends from \"./AddFriends\";\r\nimport Pagination from \"./UI/Pagination\";\r\nimport SearchBox from \"./UI/SearchBox\";\r\nconst dummyData = [\r\n  { name: \"Rahul Gupta\", id: 1, fav: \"true\" },\r\n  { name: \"Shivangi Sharma\", id: 2, fav: \"false\" },\r\n  { name: \"Rohit Sharma\", id: 3, fav: \"false\" },\r\n];\r\nlet count = dummyData.length+1;\r\nconst FriendsList = () => {\r\n  const [friendsData, setFriendsData] = useState(dummyData);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [postsPerPage, setPostsPerPage] = useState(4);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  const onAddNewFriend = (enteredName) => {\r\n    setFriendsData((prevList) => {\r\n      const updatedList = [...prevList];\r\n      updatedList.push({ name: enteredName, id: count++, fav: false });\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  const deleteFriendHandler = (friendId) => {\r\n    setFriendsData((prevGoals) => {\r\n      const updatedList = prevGoals.filter(\r\n        (friends) => friends.id !== friendId\r\n      );\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  function compare(a, b) {\r\n    if (a.fav < b.fav) {\r\n      return 1;\r\n    }\r\n    if (a.fav > b.fav) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const favFriendHandler = (friendId) => {\r\n    setFriendsData((prevFriends) => {\r\n      const updatedList = prevFriends.map((friend) => {\r\n        if (friend.id == friendId) {\r\n          if(friend.fav==\"true\")\r\n            friend.fav=\"false\";\r\n          else \r\n          friend.fav=\"true\";\r\n        }\r\n\r\n        return friend;\r\n      });\r\n      updatedList.sort(compare);\r\n      return updatedList;\r\n    });\r\n  };\r\n\r\n  const searchTextValue = (text) => {\r\n    setSearchText(text.toLocaleLowerCase());\r\n  };\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = friendsData.slice(indexOfFirstPost, indexOfLastPost);\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <AddFriends onAddNewFriend={onAddNewFriend}></AddFriends>\r\n      <SearchBox onSearch={searchTextValue}></SearchBox>\r\n      <section className={styles.FriendDetails}>\r\n        {currentPosts\r\n          .filter((val) => {\r\n            if (searchText == \"\") return val;\r\n            else if (val.name.toLocaleLowerCase().includes(searchText))\r\n              return val;\r\n          })\r\n          .map((item) => {\r\n            return (\r\n              <FriendCard\r\n                key={item.id}\r\n                fav={item.fav}\r\n                name={item.name}\r\n                id={item.id}\r\n                onDelete={deleteFriendHandler}\r\n                onFav={favFriendHandler}\r\n              ></FriendCard>\r\n            );\r\n          })}\r\n      </section>\r\n      <Pagination\r\n        postsPerPage={postsPerPage}\r\n        totalPosts={friendsData.length}\r\n        paginate={paginate}\r\n      ></Pagination>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n"]},"metadata":{},"sourceType":"module"}