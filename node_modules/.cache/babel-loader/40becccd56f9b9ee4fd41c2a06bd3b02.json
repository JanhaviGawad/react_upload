{"ast":null,"code":"var _jsxFileName = \"/home/vaibhav/Desktop/friens/src/store/FriendsProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport FriendsContext from \"./store-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFriendsState = {\n  items: [{\n    name: \"Rahul Gupta\",\n    id: 1,\n    fav: true\n  }, {\n    name: \"Shivangi Sharma\",\n    id: 2,\n    fav: false\n  }, {\n    name: \"Rohit Sharma\",\n    id: 3,\n    fav: false\n  }],\n  postsPerPage: 4,\n  currentPage: 1,\n  searchText: \"\"\n};\nlet count = defaultFriendsState.items.length + 1;\n\nconst friendsReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    let updatedItems;\n    updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      postsPerPage: state.postsPerPage,\n      currentPage: state.currentPage,\n      searchText: state.searchText\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    let updatedItems;\n    updatedItems = state.items.filter(item => item.id !== action.id);\n    return {\n      items: updatedItems,\n      postsPerPage: state.postsPerPage,\n      currentPage: state.currentPage,\n      searchText: state.searchText\n    };\n  }\n\n  if (action.type === \"FAVOURITE\") {\n    let updatedItems;\n    updatedItems = state.items.map(item => {\n      if (item.id === action.id) if (item.fav) item.fav = false;else item.fav = true;\n      return item;\n    });\n    updatedItems.sort((a, b) => {\n      if (a.fav < b.fav) {\n        return 1;\n      }\n\n      if (a.fav > b.fav) {\n        return -1;\n      }\n\n      return 0;\n    });\n    return {\n      items: updatedItems,\n      postsPerPage: state.postsPerPage,\n      currentPage: state.currentPage,\n      searchText: state.searchText\n    };\n  }\n\n  if (action.type === \"PAGINATE\") {\n    return {\n      items: state.items,\n      postsPerPage: state.postsPerPage,\n      currentPage: action.pageNo,\n      searchText: state.searchText\n    };\n  }\n\n  return defaultFriendsState;\n};\n\nconst FriendsProvider = props => {\n  _s();\n\n  const [friendState, dispatchAction] = useReducer(friendsReducer, defaultFriendsState);\n\n  const addFriendHandler = item => {\n    const newFriend = {\n      name: item,\n      id: count++,\n      fav: false\n    };\n    dispatchAction({\n      type: \"ADD\",\n      item: newFriend\n    });\n  };\n\n  const deleteFriendHandler = id => {\n    dispatchAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const favFriendHandler = id => {\n    dispatchAction({\n      type: \"FAVOURITE\",\n      id: id\n    });\n  };\n\n  const paginateHandler = number => {\n    dispatchAction({\n      type: \"PAGINATE\",\n      pageNo: number\n    });\n  };\n\n  const friendsContext = {\n    items: friendState.items,\n    postsPerPage: friendState.postsPerPage,\n    currentPage: friendState.currentPage,\n    searchText: friendState.searchText,\n    onAddNewFriend: addFriendHandler,\n    onDeleteFriend: deleteFriendHandler,\n    onFavFriend: favFriendHandler,\n    onPaginate: paginateHandler\n  };\n  return /*#__PURE__*/_jsxDEV(FriendsContext.Provider, {\n    value: friendsContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FriendsProvider, \"7pz0Q3apeLf+/aGbSiZV+KCsenY=\");\n\n_c = FriendsProvider;\nexport default FriendsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsProvider\");","map":{"version":3,"sources":["/home/vaibhav/Desktop/friens/src/store/FriendsProvider.js"],"names":["useReducer","FriendsContext","defaultFriendsState","items","name","id","fav","postsPerPage","currentPage","searchText","count","length","friendsReducer","state","action","type","updatedItems","concat","item","filter","map","sort","a","b","pageNo","FriendsProvider","props","friendState","dispatchAction","addFriendHandler","newFriend","deleteFriendHandler","favFriendHandler","paginateHandler","number","friendsContext","onAddNewFriend","onDeleteFriend","onFavFriend","onPaginate","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\r\nimport FriendsContext from \"./store-context\";\r\nconst defaultFriendsState = {\r\n  items: [\r\n    { name: \"Rahul Gupta\", id: 1, fav: true},\r\n    { name: \"Shivangi Sharma\", id: 2, fav: false },\r\n    { name: \"Rohit Sharma\", id: 3, fav: false}\r\n  ],\r\n  postsPerPage: 4,\r\n  currentPage: 1,\r\n  searchText: \"\",\r\n};\r\nlet count=defaultFriendsState.items.length+1;\r\n\r\nconst friendsReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    let updatedItems;\r\n    updatedItems = state.items.concat(action.item);\r\n    return {\r\n      items: updatedItems,\r\n      postsPerPage: state.postsPerPage,\r\n      currentPage: state.currentPage,\r\n      searchText: state.searchText,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    let updatedItems;\r\n    updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    return {\r\n      items: updatedItems,\r\n      postsPerPage: state.postsPerPage,\r\n      currentPage: state.currentPage,\r\n      searchText: state.searchText\r\n    };\r\n  }\r\n\r\n  if (action.type === \"FAVOURITE\") {\r\n    let updatedItems;\r\n    updatedItems = state.items.map((item) => {\r\n      if (item.id === action.id)\r\n        if (item.fav) item.fav = false;\r\n        else item.fav = true;\r\n      return item;\r\n    });\r\n    updatedItems.sort( (a, b)=> {\r\n      if (a.fav < b.fav) {\r\n        return 1;\r\n      }\r\n      if (a.fav > b.fav) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    return {\r\n      items: updatedItems,\r\n      postsPerPage: state.postsPerPage,\r\n      currentPage: state.currentPage,\r\n      searchText: state.searchText\r\n      \r\n    };\r\n  }\r\n\r\n  if (action.type === \"PAGINATE\") {\r\n    return {\r\n      items: state.items,\r\n      postsPerPage: state.postsPerPage,\r\n      currentPage: action.pageNo,\r\n      searchText: state.searchText\r\n    };\r\n  }\r\n\r\n \r\n\r\n  return defaultFriendsState;\r\n};\r\n\r\nconst FriendsProvider = (props) => {\r\n  const [friendState, dispatchAction] = useReducer(friendsReducer,defaultFriendsState);\r\n\r\n  const addFriendHandler = (item) => {\r\n    const newFriend={ name: item, id: count++, fav: false };\r\n    dispatchAction({ type: \"ADD\", item: newFriend });\r\n  };\r\n\r\n  const deleteFriendHandler = (id) => {\r\n    dispatchAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const favFriendHandler = (id) => {\r\n    dispatchAction({ type: \"FAVOURITE\", id: id });\r\n  };\r\n\r\n  const paginateHandler = (number) => {\r\n    dispatchAction({ type: \"PAGINATE\", pageNo: number });\r\n  };\r\n\r\n \r\n\r\n  const friendsContext = {\r\n    items: friendState.items,\r\n    postsPerPage: friendState.postsPerPage,\r\n    currentPage: friendState.currentPage,\r\n    searchText: friendState.searchText,\r\n    onAddNewFriend: addFriendHandler,\r\n    onDeleteFriend: deleteFriendHandler,\r\n    onFavFriend: favFriendHandler,\r\n    onPaginate: paginateHandler\r\n  };\r\n\r\n  return (\r\n    <FriendsContext.Provider value={friendsContext}>\r\n      {props.children}\r\n    </FriendsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FriendsProvider;\r\n"]},"metadata":{},"sourceType":"module"}